我的论文题目是“面向指挥交通的城市道路行驶时间预测模型的研究及实现”，我将从以下五个部分介绍我研究生阶段的工作，其中主要工作是第二部分的地图匹配方法以及第三部分的道路行驶时间预测模型，并基于以上研究内容完成了对应的原型系统的设计与实现，最后对以上内容进行了总结与展望。

随着城市化进程的加速，车辆数量急剧增加，城市交通面临着日益严重的挑战，如交通拥堵、紧急事件等。但随着计算机技术、传感器技术以及大数据技术的发展，智慧交通系统（ITS）在解决上述问题中变得越来越重要。其中，城市道路行驶时间的预测对于改善交通状况、提高交通效率具有重要的意义。

对于城市道路行驶时间的预测，传统的行驶时间预测方法大多是基于预定的概率分布模型，这些方法不能充分利用路网的拓扑信息与不确定性特征，从而影响预测结果的准确性。但随着深度学习、图卷积神经网络等先进技术的快速发展，我们可以通过深度图学习模型来更好的拟合交通网中的道路行驶速度分布，进而提高预测准确率。

为了实现道路行驶时间预测，我们首先需要大量真实的道路历史行驶速度数据，如交通传感器采集的数据、一些交通管理机构或第三方数据提供商维护的历史交通数据。交通情况通常具有一定的模式性和规律性，比如在上下班高峰期间通常会有交通拥堵，而在非高峰时段，道路交通可能会比较顺畅。历史速度数据可以帮助我们识别这些模式和规律，从而进行更准确的预测。
近几年随着网约车的快速发展，网约车的覆盖范围越来越广、交通代表性高、数据可靠性越来越高且数据量庞大，因此本文使用网约车产生的GPS轨迹数据作为获取道路历史行驶速度的数据源，通过地图匹配方法可以将大量GPS轨迹匹配到道路网上，进而获得整个路网的历史行驶速度数据。

在获得了大量道路历史行驶速度数据后，我们需要根据历史数据预测未来的道路行驶时间，深度学习模型可以帮助我们完成这一任务。首先，路网中具有很强的不确定性，贝叶斯方法可以很好的处理不确定性和噪声数据，这在预测道路行驶时间中尤为重要。此外，贝叶斯方法也可以避免过拟合，提高模型的泛化能力。
路网中的道路不是独立存在的，而是相关连接的，因此图结构可以很好的描述路网结构，时空图（STG）能够考虑道路网络的空间布局和时间变化，将道路和时间维度结合起来，提供更全面的交通信息。它可以捕捉交通拥堵、路段行驶速度、道路状况等时空变化的特征，帮助准确预测行驶时间。
变分自编码器（VAE）是一种生成性深度学习模型，它可以通过学习数据的隐含分布来生成新的数据。在道路行驶时间预测中，我们可以通过VAE学习到道路行驶速度数据的隐含分布，然后基于这个分布来生成预测结果。
结合以上内容的贝叶斯时空图变分自编码器具有综合时空建模、动态更新与适应性、多源数据整合、高维特征学习与表示以及不确定性估计的特点。这些特点使得模型能够更准确地预测城市道路行驶时间，提高交通预测的可信度和实用性。

综上所述，本文的主要工作如下：
1. 为了从GPS轨迹数据中获得道路历史行驶速度，我们提出了一种基于交互式投票的地图匹配方法，优化了GPS轨迹与路网的匹配准确率与效率的问题，并基于匹配的结果计算出每条道路的历史形式速度数据。
2. 为了预测道路行驶时间，我们提出了一种基于贝叶斯时空图变分自编码器
的道路行驶时间预测模型，该模型结合了贝叶斯理论、图模型与变分自编码器，能够充分利用道路历史速度数据，预测未来道路行驶时间，为智慧交通系统提供数据支持。
3. 将上述提出的地图匹配方法与道路行驶时间预测模型应用到实际环境中，设计并实现了道路行驶时间预测系统。

接下来首先介绍基于交互式投票的地图匹配方法，该方法整体流程如图所示，分别是数据预处理、候选点搜索、位置上下文分析、相互影响建模以及交互式投票。
- 在数据预处理阶段中，首先对GPS轨迹数据进行去噪处理，如删除车辆停止时采集的数据、使用卡尔曼滤波法纠正GPS轨迹中偏差过大的点，然后对道路网进行简化，将同一路口的多个节点合并为一个节点，这可以大大的加快路网有关的计算。
- 将处理后的GPS轨迹数据与路网数据投影到三维笛卡尔坐标系中，建立3维KD树，通过KNN算法为每个采样点匹配多个候选路段，再通过墨卡托投影计算每个候选路段对应的候选点，这样每个GPS采样点都获得了若干个候选点。

目前很多候选路段都是错误的，因此需要以下3个方面的分析过滤掉大部分的错误数据。首先道路一致性分析可以有效的区分立体的路网结构，如立交桥与地面道路的区分；然后再分别考虑数据的时间特性与空间相关性，计算加权后的权重F，最后通过三个约束条件过滤调大部分的错误路径。

因为连续的GPS采样点之间会相互影响，通过上一节提到的权重、加权影响建模以及夹权评分矩阵，对采样点之间的相互影响进行建模，构建候选图，图中红色的路径为不满足约束条件的路径。

最后通过交互式投票找出最优的匹配路径。如图所示，路网中有4个GPS采样点𝑝_0 𝑝_1,𝑝_2,𝑝_3以及其对应的候选点𝑎_𝑖^𝑗，𝑗=0,1,2。通过计算所有点的累计权重cw(𝑎_𝑖^𝑠 )=max\{cw(𝑎_(𝑖−1)^𝑡 )+φ_𝑡𝑠^((𝑖,𝑗) )后，即可得到每个候选点的局部最优路径。

在找到每个候选点𝑎_𝑖^𝑗的局部最优路径后，得到了一组局部最优路径。对所有边进行投票，最后筛选出每两个相邻采样点中投票最多的子路径作为最终匹配子路径。

在实验中，我们采用由Kaggle提供的葡萄牙波尔图市从2018年6月到2018年9月某出租车运营公司的开放数据集作为评估基于交互式的地图匹配方法的基础数据。该数据集拥有约170万条数据，共计约8000万个采样点。数据包括采样时间戳、WGS84坐标经纬度等数据，采样间隔在10秒~30秒之间。

该图展示了我们的方法MIVMM与AIVMM以及ST-Matching方法在不通道路上准确率的对比，结果表明我们提出的方法在三种道路类型上都大幅度优于ST-Matching，小幅度优于AIVMM方法。

如图所示为AIVMM方法与我们的方法匹配结果的对比，可以看到在红色圈注区域我们的方法匹配到了正确的路径。

该图展示了三种地图匹配方法的平均距离误差对比，数值越小越好。可以看到我们的方法在三种道路上都有最低的平均距离误差。

该图能够直观的看出两个方法的采样点与匹配点的距离误差，可以看到我们的方法距离误差更小。

在效率对比方面，分别取候选点个数为2、3、4、5、6时三种算法在Python环境下的执行时长，采样点个数为3872个。可以看到绿色的ST-Matching方法执行效率最快，其次是我们的方法，最后是AIVMM方法。分解步骤来看，在KNN搜索候选路段中我们的方法由于加入了墨卡托以及更大的KNN搜索范围，所以执行效率低于对比方法AIVMM，但在最短路径搜索效率上以及局部最优路径的计算上我们的方法要优于AIVMM方法，因为我们简化了路网结构且优化了计算局部最优路径算法，因此整体上我们的方法相较于AIVMM方法效率更高。

随着候选点个数的增加，执行时间也随之增加，准确率也逐步提升，为了找到最优的候选点个数，我们分别测试了候选点个数分别为2、3、4、5、6、7时MIVMM方法在三种不同道路上准确率于效率的表现，结果如右图所示，但当候选点个数大于5时，算法的准确率提升越来越小，但算法执行时间依然越来越长，因此候选点个数为5时算法效益最高。
