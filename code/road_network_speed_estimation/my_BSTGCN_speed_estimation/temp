import multiprocessing as mp
import copy
import networkx as nx
from tqdm import tqdm

def persist_graph(data):
    index, _data, one_st_graph = data
    timestamp, values = _data
    one_st_graph.graph["timestamp"] = timestamp
    # 只留长度、车道数、限速
    for road_id in one_st_graph.nodes:
        del one_st_graph.nodes[road_id]["from_node_id"]
        del one_st_graph.nodes[road_id]["to_node_id"]
        del one_st_graph.nodes[road_id]["average_speed"]
    for road_id, speed in values.items():
        one_st_graph.nodes[road_id]["time_data_speed"] = speed
    data_path = "../road_network_speed_estimation/my_BSTGCN_speed_estimation/data"
    nx.write_graphml(one_st_graph, f"{data_path}/st_road_graph_{index}.graphml")

time_road_data = {...}
road_graph = {...}

with mp.Pool() as pool:
    data_list = [(index, _data, copy.deepcopy(road_graph)) for index, _data in enumerate(time_road_data.items())]
    for _ in tqdm(pool.imap(persist_graph, data_list), total=len(data_list)):
        pass
